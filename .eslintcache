[{"C:\\Users\\Admin\\cotrack\\src\\index.js":"1","C:\\Users\\Admin\\cotrack\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\cotrack\\src\\App.js":"3","C:\\Users\\Admin\\cotrack\\src\\InfoBox.js":"4","C:\\Users\\Admin\\cotrack\\src\\Map.js":"5","C:\\Users\\Admin\\cotrack\\src\\Table.js":"6","C:\\Users\\Admin\\cotrack\\src\\util.js":"7","C:\\Users\\Admin\\cotrack\\src\\LineGraph.js":"8","C:\\Users\\Admin\\cotrack\\src\\serviceWorker.js":"9"},{"size":1049,"mtime":1612204910700,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":8937,"mtime":1612206842388,"results":"13","hashOfConfig":"11"},{"size":1607,"mtime":1612205484534,"results":"14","hashOfConfig":"11"},{"size":1364,"mtime":1612204867915,"results":"15","hashOfConfig":"11"},{"size":924,"mtime":1612205339292,"results":"16","hashOfConfig":"11"},{"size":3860,"mtime":1612205577501,"results":"17","hashOfConfig":"11"},{"size":5071,"mtime":1612205509270,"results":"18","hashOfConfig":"11"},{"size":5481,"mtime":1611490651322,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16vnzjz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Admin\\cotrack\\src\\index.js",[],["42","43"],"C:\\Users\\Admin\\cotrack\\src\\reportWebVitals.js",[],["44","45"],"C:\\Users\\Admin\\cotrack\\src\\App.js",["46","47"],"// import React, {useEffect, useState} from \"react\";\n// import {  MenuItem,  FormControl,  Select,   Card, CardContent } from \"@material-ui/core\";\n// import InfoBox from \"./InfoBox\";\n// import Map from \"./Map\";\n// import Table from \"./Table\";\n// import numeral from 'numeral';\n// import LineGraph from \"./LineGraph\";\n// import { sortData, prettyPrintStat } from \"./util\";\n// import './App.css';\n// import \"leaflet/dist/leaflet.css\";\n\n// function App() {\n//   const [countries,setCountries]= useState([]);\n//   const [country, setCountry]= useState('Worldwide');\n//   const [countryInfo, setCountryInfo]= useState({});\n//   const [tableData, setTableData]= useState([]);\n//   const [mapCenter, setMapCenter]=useState({lat: 34.80746, lng: -40.4796});\n//   const [mapZoom, setMapZoom]=useState(3);\n//   const [mapCountries, setMapCountries]=useState([]);\n//   const [casesType, setCasesType]=useState(\"cases\");\n\n//   useEffect(() => {\n//     fetch(\"https://disease.sh/v3/covid-19/all\")\n//     .then (response => response.json())\n//     .then (data => {\n//       setCountryInfo(data);\n//     });\n//    }, []);\n\n\n//   useEffect(()=>{\n//     const getCountriesData= async () =>{\n//       await fetch(\"https://disease.sh/v3/Covid-19/countries\")\n//       .then ((response)=>response.json()). then ((data)=> {\n//         const countries= data.map((country)=> ({\n//           name: country.country,\n//           value: country.countryInfo.iso2\n//         }));\n\n//         const sortedData= sortData(data);\n//         setTableData(sortedData);\n//         setMapCountries(data);\n//         setCountries(countries);\n//         setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n//         setMapZoom(4);\n//       });\n//     };\n//     getCountriesData();\n//   },[]);\n\n//   const onCountryChange = async (event) => {\n//     const countryCode= event.target.value;\n//      setCountry (countryCode);\n\n//     const url= countryCode === \"worldwide\"\n//     ? \"https://disease.sh/v3/covid-19/all\"\n//     : `https://disease.sh/v3/covid-19/countries/ ${countryCode}`;\n\n//     await fetch (url).then (response => response.json()).then (data =>{\n//       setCountry(countryCode);\n//       setCountryInfo (data);\n\n//     })\n//   };\n\n//     return (\n//     <div className=\"app\">\n//       <div className=\"app_left\">\n//           <div className=\"app_header\">\n//               <h1>COVID 19 TRACKER</h1>\n//                   <FormControl className=\"app_dropdown\">\n//                   <Select variant=\"outlined\"  onChange= {onCountryChange}value={country}>\n//                   <MenuItem value= \"Worldwide\">Worldwide</MenuItem>\n//                 {\n//                   countries.map(country =>(\n//                     <MenuItem value= {country.value}>{country.name}</MenuItem>\n//                   ))\n//                 } \n//                   </Select>\n//                 </FormControl>\n//               </div >\n//               <script src=\"numeral.min.js\"></script>\n//               <div className=\"app_stats\">\n//               <InfoBox\n//                 onClick={(e) => setCasesType(\"cases\")}\n//                 title=\"Coronavirus Cases\"\n//                 isRed\n//                 active={casesType === \"cases\"}\n//                 cases={prettyPrintStat(countryInfo.todayCases)}\n//                 total={numeral(countryInfo.cases).format(\"0.0a\")}\n//               />\n//               <InfoBox\n//                 onClick={(e) => setCasesType(\"recovered\")}\n//                 title=\"Recovered\"\n//                 active={casesType === \"recovered\"}\n//                 cases={prettyPrintStat(countryInfo.todayRecovered)}\n//                 total={numeral(countryInfo.recovered).format(\"0.0a\")}\n//               />\n//               <InfoBox\n//                 onClick={(e) => setCasesType(\"deaths\")}\n//                 title=\"Deaths\"\n//                 isRed\n//                 active={casesType === \"deaths\"}\n//                 cases={prettyPrintStat(countryInfo.todayDeaths)}\n//                 total={numeral(countryInfo.deaths).format(\"0.0a\")}\n//               />\n//               </div>\n//               <Map\n//               casesType={casesType}\n//               countries={mapCountries}\n//               center={mapCenter}\n//               zoom={mapZoom}/>  \n//         </div>\n//               <Card className=\"app_right\">\n//                 <CardContent>\n//                   <h3>Live Cases by Country</h3>\n//                   <Table countries= {tableData} />\n//                   {/* table */}\n//                   <h3>Worldwide New {casesType}</h3>\n//                   <LineGraph casesType={casesType}/>\n//                   {/* graph */}\n//                 </CardContent>\n          \n//       </Card>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url) .then((response) => response.json()) .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\Admin\\cotrack\\src\\InfoBox.js",[],"C:\\Users\\Admin\\cotrack\\src\\Map.js",["48"],"// import React from 'react';\r\n// import \"./Map.css\";\r\n// import { MapContainer as MapLeaflet, TileLayer, useMap } from \"react-leaflet\";\r\n// import { showDataOnMap } from \"./util\";\r\n\r\n// function Map({countries, casesType, center, zoom}) {\r\n//     return (\r\n//         <div className=\"map\">\r\n//             <MapLeaflet center= {center} zoom={zoom}>\r\n//                 <TileLayer\r\n//                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//                 attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n//                 />\r\n//                 {showDataOnMap(countries, casesType )}\r\n//             </MapLeaflet>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Map;\r\n\r\nimport React from \"react\";\r\nimport { MapContainer as MapLeaflet, TileLayer, useMap } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <MapLeaflet center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </MapLeaflet>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;","C:\\Users\\Admin\\cotrack\\src\\Table.js",[],"C:\\Users\\Admin\\cotrack\\src\\util.js",[],"C:\\Users\\Admin\\cotrack\\src\\LineGraph.js",[],"C:\\Users\\Admin\\cotrack\\src\\serviceWorker.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":191,"column":11,"nodeType":"57","messageId":"58","endLine":191,"endColumn":64,"fix":"59"},{"ruleId":"55","severity":1,"message":"56","line":191,"column":11,"nodeType":"57","messageId":"58","endLine":191,"endColumn":27,"fix":"60"},{"ruleId":"61","severity":1,"message":"62","line":23,"column":49,"nodeType":"63","messageId":"64","endLine":23,"endColumn":55},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"67","text":"68"},{"range":"69","text":"68"},"no-unused-vars","'useMap' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",[6664,6666],".",[6627,6629]]